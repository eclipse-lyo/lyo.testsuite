<!--
	Copyright (c) 2011, 2014, 2025 IBM Corporation and others
    
    See the NOTICE file(s) distributed with this work for additional
    information regarding copyright ownership.
   
    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License 2.0 which is available at
    http://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License 1.0
    which is available at http://www.eclipse.org/org/documents/edl-v10.php.
   
    SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.eclipse.lyo.testsuite</groupId>
    <artifactId>lyo-testsuite-build</artifactId>
    <version>5.0.1-SNAPSHOT</version>
    <relativePath>../org.eclipse.lyo.testsuite.build/pom.xml</relativePath>
  </parent>

  <artifactId>testsuite-server</artifactId>
  <name>OSLC Implementation Assessment Test</name>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <skipTests>true</skipTests> <!-- run mvn with -DskipTests=false -->
  </properties>
  <scm>
    <url>http://git.eclipse.org/c/lyo/org.eclipse.lyo.testsuite.git</url>
  </scm>

  <profiles>
    <profile>
      <id>doclint-java8-disable</id>
      <activation>
        <jdk>[1.8,)</jdk>
      </activation>
      <properties>
        <javadoc.opts>-Xdoclint:none</javadoc.opts>
      </properties>
    </profile>
  </profiles>

  <repositories>
    <repository>
      <id>lyo-releases</id>
      <name>Eclipse Lyo Releases</name>
      <url>https://repo.eclipse.org/content/repositories/lyo-releases/</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>lyo-snapshots</id>
      <name>Eclipse Lyo Snapshots</name>
      <url>https://repo.eclipse.org/content/repositories/lyo-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>

  <dependencies>
    <!-- https://stackoverflow.com/questions/52502189/java-11-package-javax-xml-bind-does-not-exist -->
    <dependency>
      <groupId>jakarta.xml.bind</groupId>
      <artifactId>jakarta.xml.bind-api</artifactId>
      <version>2.3.3</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
    </dependency>

    <!-- Lyo Client dependencies -->
    <dependency>
      <groupId>org.eclipse.lyo.clients</groupId>
      <artifactId>oslc-client</artifactId>
      <version>7.0.0.Alpha3</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.lyo.clients</groupId>
      <artifactId>oslc-client-base</artifactId>
      <version>7.0.0.Alpha3</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.lyo.server</groupId>
      <artifactId>net.oauth.core-oauth-jakarta</artifactId>
      <version>7.0.0.Alpha3</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.lyo.server</groupId>
      <artifactId>net.oauth.core-oauth-consumer-jakarta</artifactId>
      <version>7.0.0.Alpha3</version>
    </dependency>

    <dependency>
      <groupId>org.eclipse.lyo.server</groupId>
      <artifactId>net.oauth.core-oauth-httpclient4-jakarta</artifactId>
      <version>7.0.0.Alpha3</version>
    </dependency>

    <!-- JAX-RS dependencies -->
    <dependency>
      <groupId>jakarta.ws.rs</groupId>
      <artifactId>jakarta.ws.rs-api</artifactId>
      <version>3.1.0</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>3.1.7</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>3.1.7</version>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.connectors</groupId>
      <artifactId>jersey-apache-connector</artifactId>
      <version>3.1.7</version>
    </dependency>

    <dependency>
      <groupId>org.apache.wink</groupId>
      <artifactId>wink-json4j</artifactId>
      <version>1.4</version>
    </dependency>

    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-core</artifactId>
      <!-- <version>2.13.0</version> -->
      <!-- <version>5.5.0</version> -->
      <!-- Lyo not ready yet -->
      <version>4.10.0</version>
    </dependency>


    <dependency>
      <groupId>xml-apis</groupId>
      <artifactId>xml-apis</artifactId>
      <version>2.0.2</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>4.0.5</version>
      <scope>runtime</scope>
    </dependency>

    <!-- Added undeclared dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
    </dependency>

    <!--  Transitive CVEs address  -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>1.19.0</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Source Jar Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.5.3</version>
      </plugin>

      <plugin>
        <groupId>org.openrewrite.maven</groupId>
        <artifactId>rewrite-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.46.1</version>
        <executions>
          <execution>
            <id>auto-style</id>
            <goals>
              <goal>apply</goal>
            </goals>
            <!-- Using validate phase, so this happens before enforce-style -->
            <phase>validate</phase>
          </execution>
        </executions>
        <configuration>
          <!-- optional: limit format enforcement to just the files changed by this feature branch -->
          <!--                    <ratchetFrom>origin/main</ratchetFrom>-->
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>.gitattributes</include>
                <include>.gitignore</include>
              </includes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace />
              <endWithNewline />
              <indent>
                <tabs>true</tabs>
                <spacesPerTab>4</spacesPerTab>
              </indent>
            </format>
          </formats>
          <!-- define a language-specific format -->
          <java>
            <!-- apply a specific flavor of google-java-format and reflow long strings -->
            <!-- <googleJavaFormat>
              <version>1.28.0</version>
              <style>AOSP</style>
              <reflowLongStrings>true</reflowLongStrings>
              <formatJavadoc>true</formatJavadoc>
            </googleJavaFormat> -->
            <palantirJavaFormat>
              <version>2.73.0</version>                     <!-- optional -->
              <style>PALANTIR</style>                       <!-- or AOSP/GOOGLE (optional) -->
              <formatJavadoc>true</formatJavadoc>          <!-- defaults to false (optional, requires at least
              Palantir 2.39.0) -->
            </palantirJavaFormat>
            <removeUnusedImports>
              <engine>google-java-format</engine>    <!-- optional. Defaults to `google-java-format`.
              Can be switched to `cleanthat-javaparser-unnecessaryimport` (e.g. to process JDK17
              source files with a JDK8+ Runtime) -->
            </removeUnusedImports>
          </java>
        </configuration>
      </plugin>
    </plugins>
    <testSourceDirectory>${basedir}/src/main/java</testSourceDirectory>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>3.5.3</version>
      </plugin>
    </plugins>
  </reporting>
</project>